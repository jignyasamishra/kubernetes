apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-pv
  namespace: new-test  # Ensure the correct namespace is specified
spec:
  capacity:
    storage: 10Gi  # Adjust the size as needed
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data/mongo  # Adjust the host path as needed
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
  namespace: new-test  # Ensure the correct namespace is specified
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi  # Should match the PV size
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
  namespace: new-test  # Ensure the correct namespace is specified
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo-container
        image: mongo:latest
        ports:
        - containerPort: 27017
        readinessProbe:
          exec:
            command:
            - mongosh
            - --eval
            - "db.stats()"
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: mongo-storage
          mountPath: /data/db  # MongoDB default data directory
      volumes:
      - name: mongo-storage
        persistentVolumeClaim:
          claimName: mongo-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: new-test  # Ensure the correct namespace is specified
spec:
  selector:
    app: mongo
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-deployment
  namespace: new-test  # Ensure the correct namespace is specified
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      initContainers:
      - name: wait-for-mongo
        image: busybox
        command: ['sh', '-c', 'until nslookup mongo-service.new-test.svc.cluster.local; do echo waiting for mongo; sleep 2; done;']
      containers:
      - name: api-container
        image: satyazzz123/go-b:latest
        ports:
        - containerPort: 6000
        env:
        - name: MONGO_URL
          value: "mongodb://mongo-service:27017/godb"
---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: new-test  # Ensure the correct namespace is specified
spec:
  selector:
    app: api
  ports:
    - protocol: TCP
      port: 6000
      targetPort: 6000
  type: NodePort